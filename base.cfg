[buildout]
package-name = collective.excelexport
package-extras = [test]

extends =
    https://raw.githubusercontent.com/collective/buildout.plonetest/master/qa.cfg
    checkouts.cfg

extensions =
    mr.developer
    plone.versioncheck

parts +=
    instance
    omelette
    ploneversioncheck
    createcoverage
    robot
#     coverage
#     test-coverage
#     plone-helper-scripts

develop = .

eggs +=
    Plone
    Pillow
#    Products.PDBDebugMode
#    collective.profiler
#    ipdb
    pdbp
#    plone.reload

package-extras +=
    pdbp

always-checkout = force

[instance]
environment-vars +=
    PYTHONBREAKPOINT pdbp.set_trace
eggs +=
    ${buildout:eggs}
zcml +=

[test]
environment = testenv
initialization +=
    os.environ['PYTHONBREAKPOINT'] = 'pdbp.set_trace'

[testenv]
zope_i18n_compile_mo_files = true

[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

[ploneversioncheck]
recipe = zc.recipe.egg
eggs = plone.versioncheck

[code-analysis]
recipe = plone.recipe.codeanalysis
pre-commit-hook = True
return-status-codes = True
directory = ${buildout:directory}/src/collective/excelexport
flake8-ignore = E123,E124,E501,E126,E127,E128,W391,C901,W503,W504
flake8-extensions =
    flake8-isort

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[reload, debug]

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources
